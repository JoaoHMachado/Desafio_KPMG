@model WebAppPeopleCRUD.DTO.PessoaDTO
@{
    ViewData["Title"] = "Editar Pessoa";
}

<h1>Editar Pessoa</h1>

<hr />

<form asp-action="Edit" method="post" onsubmit="return validateDependentes2()" style="padding-top: 1rem">
    <input type="hidden" asp-for="IdPessoa" />
    <div class="form-group">
        <label asp-for="NomePessoa" class="control-label">Nome Pessoa:</label>
        <input asp-for="NomePessoa" class="form-control" style="width: 50%" />
        <span asp-validation-for="NomePessoa" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="IdadePessoa" class="control-label">Data de Nascimento:</label>
        <input asp-for="IdadePessoa" class="form-control" style="width: 50%" type="date" />
        <span asp-validation-for="IdadePessoa" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label>Dependentes:</label>
        <table class="table">
            <thead>
                <tr>
                    <th>Nome</th>
                    <th>Data de Nascimento</th>
                    <th></th>
                </tr>
            </thead>
            <tbody id="dependentesTable">
                @if (Model.Dependentes != null)
                {
                    for (int i = 0; i < Model.Dependentes.Count; i++)
                    {
                        <tr>
                            <td>
                                <input type="hidden" asp-for="Dependentes[i].IdDependente" />
                                <input asp-for="Dependentes[i].NomeDependente" class="form-control" />
                            </td>
                            <td>
                                <input asp-for="Dependentes[i].IdadeDependente" class="form-control" type="date" />
                            </td>
                            <td>
                                <button type="button" class="btn btn-danger" onclick="removeDependente(this)">Remover</button>
                            </td>
                        </tr>
                    }
                }

            </tbody>
        </table>
        <div style="padding-top: 1rem">
            <button type="button" class="btn btn-secondary" onclick="adicionarDependente()">Adicionar Dependente</button>
        </div>
    </div>
    <div class="form-group" style="padding-top: 1rem">
        <input type="submit" value="Salvar" class="btn btn-primary" />
    </div>
</form>
<div class="form-group" style="padding-top: 1rem">
    <a asp-controller="Home" asp-action="Index" class="btn btn-primary">Voltar</a>
</div>

@section Scripts {
    <script>
        function adicionarDependente() {
            var index = document.querySelectorAll('#dependentesTable tr').length;
            var template = `
                        <tr>
                            <td>
                                <input type="hidden" name="Dependentes[${index}].IdDependente" value="0" />
                                <input name="Dependentes[${index}].NomeDependente" class="form-control" />
                            </td>
                            <td>
                                <input name="Dependentes[${index}].IdadeDependente" class="form-control" type="date" id=""/>
                            </td>
                            <td>
                                <button type="button" class="btn btn-danger" onclick="removeDependente(this)">Remover</button>
                            </td>
                        </tr>`;
            document.getElementById('dependentesTable').insertAdjacentHTML('beforeend', template);
        }

        function removeDependente(button) {
            button.closest('tr').remove();
        }

        function validateDependentes2() {
            var isValid = true;
            var today = new Date();

            document.querySelectorAll('[name$="IdadeDependente"]').forEach(function (input) {
                var birthDate = new Date(input.value);
                if (isNaN(birthDate.getTime())) {
                    alert('A data de nascimento é inválida.');
                    isValid = false;
                    return;
                }

                var age = today.getFullYear() - birthDate.getFullYear();
                var monthDifference = today.getMonth() - birthDate.getMonth();
                if (monthDifference < 0 || (monthDifference === 0 && today.getDate() < birthDate.getDate())) {
                    age--;
                }

                if (age < 18) {
                    alert('Todos os dependentes devem ter 18 anos ou mais.');
                    isValid = false;
                }
            });

            return isValid;
        }
    </script>
}
